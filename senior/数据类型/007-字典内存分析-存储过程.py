# -*- coding = utf-8 -*-
# @Time : 2021/5/13 22:42
# @Author : spray_dream
# @File : 020-字典内存分析-存储过程.py
# @Software: PyCharm

print(bin(hash("name")))
# 1.
# 将键放入字典中时,先计算键的散列值,
# 通过hash()计算,先拿散列值右边几位为偏移量,例如右三位是八种排列组合,字典有八对数组,若三位数二进制对应的偏移量
# 的索引已不为空,则依次向高位数取,直到有空位置,若2/3的位置都不为空时,会将字典扩容,增加更多数组的位置

# 2.
# 根据键对象找值对象,也是先求键的散列值,这个散列值跟放入键的时候一样,跟1一样,
# 取几位数找偏移量,求对应索引位置的键的散列值,若两者散列值一样,则返回值
# 若不一样,则跟1一样继续直到找到,依次取完后若没有,则返回None
