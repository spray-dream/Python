# -*- coding = utf-8 -*-
# @Time : 2021/6/23 23:22
# @Author : spray_dream
# @File : 029-函数内存分析.py
# @Software: PyCharm

def test01():
    print('txt')
# 函数定义的时候,先在堆里面创建函数对象,包含参数,代码等信息,然后在栈里面保存了变量,
# 变量名字是函数的名字(不包括括号),它的值是堆里面函数对象的地址

test01()   # 表示调用这个函数,通过这句代码找到函数对象,执行里面的代码
c = test01    # 把test01里的值拷贝给变量c,也指向函数的地址
c()    # 所以用c()时,也是在调用函数

# 加括号和不加括号的区别,加括号时是将函数本身赋值,不加括号时只赋值函数地址

# 调用函数:test01() 的时候python会创建一个栈帧(stack frame),
# 栈帧内部会创建变量,指向对象的地址,调用的时候创建一次栈帧,调用结束后栈帧会被删掉,
# 因此局部变量的作用域只在函数内部,函数内部可以访问外部,但是外部不能访问内部


